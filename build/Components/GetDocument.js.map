{"version":3,"sources":["../../src/Components/GetDocument.js"],"names":["setdocDoc","res","docDoc","dd"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,QAAA,SAAA,wBAAA,QAAA,oBAAA,CAAA,CAAA;;AACA,QAAA,WAAA,QAAA,oBAAA,CAAA;;AACA,QAAA,SAAA,uBAAA,QAAA,4BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,aAAA,WAAA,GAAuB;AAErC,UAAA,YAA8B,CAAA,GAAA,OAAA,QAAA,EAA9B,EAA8B,CAA9B;AAAA,UAAA,aAAA,eAAA,SAAA,EAAA,CAAA,CAAA;AAAA,UAAA,SAAA,WAAA,CAAA,CAAA;AAAA,UAAA,YAAA,WAAA,CAAA,CAAA;;AAEG,OAAA,GAAA,OAAA,SAAA,EAAU,YAAM;AAClB,SAAA,GAAA,SAAA,UAAA,EAAA,WAAA,EAAA,IAAA,CAA6B,UAAA,GAAA,EAAA;AAAA,iBAASA,UAAUC,IAAnB,KAASD,CAAT;AAA7B,SAAA;AADE,OAAA,EAEA,CAFA,MAEA,CAFA;AAIA,aAAA,cACI,OAAA,SAAA,EAAA,aAAA,CAAA,OAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aACI,OAAA,SAAA,EAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EADJ,KACI,CADJ,EAAA,aAEI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,CAAD,EAAA,IAAA,EAAA,aACI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,IAAA,EAAA,IAAA,EAAA,aACI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,GAAA,EAAA,IAAA,EAAA,aACI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,IAAA,EAAA;AAAgB,uBAAW;AAA3B,SAAA,EAHZ,IAGY,CADJ,CADJ,CADJ,EAAA,aAOI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,IAAA,EAAA,IAAA,EACKE,SACG,OAAA,GAAA,CAAW,UAAA,EAAA,EAAE;AAAA,iBAAA,cACT,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,GAAA,EAAA,IAAA,EAAA,aACI,OAAA,SAAA,EAAA,aAAA,CAAC,OAAD,SAAC,EAAD,IAAA,EAAA,IAAA,EAAiBC,GAFZ,EAEL,CADJ;AADS;AADV,SACH,CADHD,GAXjB,EAUY,CAPJ,CAFJ;AADJ;AAsBH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getGeneral } from '../Request/Request'\nimport ClayTable from '@clayui/table'\n\nexport default function GetDocument() {\n\n\tconst [ docDoc, setdocDoc ] = useState([])\n\n    useEffect(() => {\n\t\tgetGeneral('documents').then((res) => setdocDoc(res.items))\n\t}, [docDoc])\n\n    return (\n        <>\n            <h2>GET</h2> \n            <ClayTable>\n                <ClayTable.Head>\n                    <ClayTable.Row>\n                        <ClayTable.Cell headingCell>{'id'}</ClayTable.Cell>\n                    </ClayTable.Row>\n                </ClayTable.Head>\n\n                <ClayTable.Body>\n                    {docDoc ?\n                        docDoc.map(dd => (\n                            <ClayTable.Row>\n                                <ClayTable.Cell>{dd.id}</ClayTable.Cell>\n                            </ClayTable.Row>\n                        )) : ''}\n                </ClayTable.Body>\n            </ClayTable>\n        </>\n\n    );\n}"]}