{"version":3,"sources":["../../src/Components/UpdateKnowledge.js"],"names":["UPDATEKNOWLEDGE","setId","event","id","setTitle","title","setBody","body"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { knowledgeUpdate } from '../Request/Request'\nimport ClayForm, { ClayInput } from \"@clayui/form\"\nimport ClayButton from \"@clayui/button\"\n\nexport default function UpdateBlog() {\n\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [id, setId] = useState('');\n\n\n    const UPDATEKNOWLEDGE = () => {\n        knowledgeUpdate(id, title, body)\n    }\n\n    return (\n        <>\n            <hr />\n\n            <h2>UPDATE:</h2> <br />\n\n            <ClayForm>\n                <ClayForm.Group>\n                    <label htmlFor='id'>KNOWLEDGE ID</label>\n                    <ClayInput \n                    id='id'\n                    onChange={(event) => setId(event.target.value)}\n                    placeholder='id'\n                    type='text'\n                    value={id}\n                    />\n                </ClayForm.Group>\n                <ClayForm.Group>\n                    <label htmlFor='title'>TITLE</label>\n                    <ClayInput \n                    id='title'\n                    onChange={(event) => setTitle(event.target.value)}\n                    placeholder='title'\n                    type='text'\n                    value={title}\n                    />\n                </ClayForm.Group>\n                <ClayForm.Group>\n                    <label htmlFor='body'>BODY</label>\n                    <ClayInput \n                    id='body'\n                    onChange={(event) => setBody(event.target.value)}\n                    placeholder='body'\n                    type='text'\n                    value={body}\n                    />\n                </ClayForm.Group>\n            </ClayForm>\n\n            <ClayButton displayType='primary' onClick={() => UPDATEKNOWLEDGE()}>Update article</ClayButton> \n            \n            <hr />\n        </>\n    );\n}"]}