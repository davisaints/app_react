<<<<<<< HEAD
{"version":3,"sources":["../../src/Request/Request.js"],"names":["siteId","Liferay","postBlog","method","headers","body","headline","articleBody","res","getBlog","updateBlog","id","Id","deleteBlog"],"mappings":";;;;;;;;;;AAAA,QAAMA,SAASC,QAAAA,YAAAA,CAAf,cAAeA,EAAf;;AAEA,QAAMC,WAAW,SAAXA,QAAW,CAAA,QAAA,EAAA,WAAA,EAA2B;AAC3C,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,wDAAA,MAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,EAC0E;AAChFC,gBADgF,MAAA;AAEhFC,iBAAS;AACR,0BAAgB;AADR,SAFuE;AAKhFC,cAAM,KAAA,SAAA,CAAe;AACpBC,oBADoB,QAAA;AAEpBC,uBAAaA;AAFO,SAAf;AAL0E,OAD1E,EAAA,IAAA,CAUC,UAAA,GAAA,EAAA;AAAA,eAASC,IAAT,IAASA,EAAT;AAVR,OAAO,CAAP;AADD,KAAA;;;;AAeA,QAAMC,UAAU,SAAVA,OAAU,GAAM;AACrB,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,mCAAA,MAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,EACqD;AAAEN,gBAAQ;AAAV,OADrD,EAAA,IAAA,CAEA,UAAA,GAAA,EAAA;AAAA,eAASK,IAAT,IAASA,EAAT;AAFP,OAAO,CAAP;AADD,KAAA;;;;AAMA,QAAME,aAAa,SAAbA,UAAa,CAAA,EAAA,EAAA,QAAA,EAAA,WAAA,EAAgC;AAClD,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,gEAAA,MAAA,CAAA,EAAA,CAAA,EACgE;AACtEP,gBADsE,KAAA;AAEtEC,iBAAS;AACR,0BAAgB;AADR,SAF6D;AAKtEC,cAAM,KAAA,SAAA,CAAe;AACpBC,oBADoB,QAAA;AAEpBC,uBAFoB,WAAA;AAGpBI,cAAIC;AAHgB,SAAf;AALgE,OADhE,EAAA,IAAA,CAWC,UAAA,GAAA,EAAA;AAAA,eAASJ,IAAT,IAASA,EAAT;AAXR,OAAO,CAAP;AADD,KAAA;;;;AAeA,QAAMK,aAAa,SAAbA,UAAa,CAAA,EAAA,EAAQ;AAC1B,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,gEAAA,MAAA,CAAA,EAAA,CAAA,EACgE;AACtEV,gBAAQ;AAD8D,OADhE,CAAP;AADD,KAAA","sourcesContent":["const siteId = Liferay.ThemeDisplay.getSiteGroupId();\n\nconst postBlog = (headline, articleBody) => {\n\treturn Liferay.Util.fetch(\n\t\t`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/blog-postings`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\theadline: headline,\n\t\t\tarticleBody: articleBody\n\t\t})\n\t}).then((res) => res.json());\n\n}\n\nconst getBlog = () => {\n\treturn Liferay.Util.fetch(\n\t\t`/o/headless-delivery/v1.0/sites/${siteId}/blog-postings`, { method: \"GET\" }\n\t).then((res) => res.json());\n}\n\nconst updateBlog = (Id, headline, articleBody) =>  {\n\treturn Liferay.Util.fetch(\n\t\t`http://localhost:8080/o/headless-delivery/v1.0/blog-postings/${Id}`, {\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\theadline: headline,\n\t\t\tarticleBody: articleBody, \n\t\t\tid: Id\n\t\t})\n\t}).then((res) => res.json())\n}\n\nconst deleteBlog = (Id) => {\n\treturn Liferay.Util.fetch(\n\t\t`http://localhost:8080/o/headless-delivery/v1.0/blog-postings/${Id}`, {\n\t\tmethod: \"DELETE\"\n\t})\n}\n\nexport { postBlog, getBlog, updateBlog, deleteBlog }"]}
=======
{"version":3,"sources":["../../src/Request/Request.js"],"names":["siteId","themeDisplay","getGeneral","method","res","deleteGeneral","postBlog","headers","body","headline","articleBody","getBlog","updateBlog","id","Id","postDocument","input","document","data","window","updateDocument","doc","postArticle","title","knowledgeUpdate"],"mappings":"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","sourcesContent":["const siteId = themeDisplay.getSiteGroupId()\n\n//General \n\nconst getGeneral = (local) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/${local}`,{\n        method: 'GET',\n    }).then((res) => res.json())\n}\n\nconst  deleteGeneral = (local) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/${local}`,{\n        method: 'GET',\n    }).then((res) => res.json())\n}\n\n// Blogs \n\n\n  const postBlog = (headline, articleBody) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/blog-postings`,{\n        method: 'POST',\n        headers: { \n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            headline,\n            articleBody\n        })\n    }).then((res) => res.json())\n}\n\n\nconst getBlog = () => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/blog-postings`, {\n      method: 'GET',\n    }).then((res) => res.json())\n}\n\nconst updateBlog = (Id, headline, articleBody) =>  {\n\treturn Liferay.Util.fetch(\n\t\t`http://localhost:8080/o/headless-delivery/v1.0/blog-postings/${Id}`, {\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\theadline: headline,\n\t\t\tarticleBody: articleBody, \n\t\t\tid: Id\n\t\t})\n\t}).then((res) => res.json())\n}\n\n//Documents \n\nconst postDocument = () => {\n    const input = document.getElementById('documentFile').files[0]\n    const data = new FormData()\n    data.append('file', input)\n\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/documents`,{\n        method: 'POST',\n        body: data\n    })\n    .then((res) => {\n        window.location.reload()\n    })\n}\n\nconst updateDocument = (id) => {\n      const doc = document.querySelector('input[type=\"file\"]');\n      const data = new FormData();\n      data.append(\"file\", doc.files[0]);\n\n      return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/documents/${id}`, {\n        body: data,\n        method: 'PATCH'\n      }).then((res) => {\n        return res.json();\n      });\n    };\n\n// KnowledgeBase\n\nconst postArticle = (title, body) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${siteId}/knowledge-base-articles`, {\n        method: 'POST',\n        headers: { \n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            title: title,\n            articleBody: body\n        })\n    }).then((res) => res.json())\n      .then((res) => {\n      window.location.reload()\n    })\n}\n\nconst knowledgeUpdate = (Id, title, body) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/knowledge-base-articles/${Id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        articleBody: body\n      })\n    }).then((res) => res.json())\n      .then((res) => {\n      window.location.reload()\n  })\n}\n\nexport { getGeneral, deleteGeneral, postBlog, getBlog, updateBlog, postDocument, updateDocument, postArticle, knowledgeUpdate  }"]}
>>>>>>> 2d859dd (Clay, React and REST)
