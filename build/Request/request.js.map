<<<<<<< HEAD
{"version":3,"sources":["../../src/Request/request.js"],"names":["siteId","themeDisplay","method","res","articleBody","headers","body","JSON"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iPA8BS,SAAA,UAAA,CAAA,MAAA,EAA4B;AACpC,qOAAO,QAAA,IAAA,CAAA,KAAA,CACL,6CADK,MAAA,EACgD;AACrDE,wOAAQ;AAD6C,+NADhD,CAAP;;8OA7BD;;AAEO,qOAAA,OAAA,GAAmB;AACzB,qOAAO,QAAA,IAAA,CAAA,KAAA,CACL,qCAAA,MAAA,GADK,gBAAA,EAEL;AACDA,wOAAQ;AADP,+NAFK,EAAA,IAAA,CAKA,UAAA,GAAA,EAAG;AAAA,uOAAIC,IAAJ,IAAIA,EAAJ;AALV,+NAAO,CAAP;;+OAQQ,SAAA,QAAA,CAAA,QAAA,EAAA,WAAA,EAAyC;AAKjD,kOAAME,UAAU,IAAhB,OAAgB,EAAhB;AACAA,sOAAAA,MAAAA,CAAAA,cAAAA,EAAAA,kBAAAA;AACA,qOAAO,QAAA,IAAA,CAAA,KAAA,CACL,qCAAA,MAAA,GADK,gBAAA,EAEL;AACDH,wOADC,MAAA;AAEDI,sOAAMC,KAFL,SAEKA,CAVM;AACX,8OADW,QAAA;AAEX,iPAAeH;AAFJ,iOAUNG,CAFL;AAGDF,yOAAAA;AAHC,+NAFK,EAAA,IAAA,CAOA,UAAA,GAAA,EAAA;AAAA,uOAASF,IAAT,IAASA,EAAT;AAPP,+NAAO,CAAP;;iPAiBQ,SAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAkD;AAK1D,kOAAME,UAAU,IAAhB,OAAgB,EAAhB;AACAA,sOAAAA,MAAAA,CAAAA,cAAAA,EAAAA,kBAAAA;AACA,qOAAO,QAAA,IAAA,CAAA,KAAA,CAAmB,6CAAnB,MAAA,EAAwE;AAC7EH,wOAD6E,OAAA;AAE7EG,yOAF6E,OAAA;AAG7EC,sOAAMC,KAAAA,SAAAA,CATK;AACX,8OADW,QAAA;AAEX,iPAAeH;AAFJ,iOASLG;AAHuE,+NAAxE,EAAA,IAAA,CAKC,UAAA,GAAA,EAAA;AAAA,uOAASJ,IAAT,EAAA;AALR,+NAAO,CAAP;AAME;;;AAlDH,gOAAMH,SAASC,aAAf,cAAeA,EAAf","sourcesContent":["const siteId = themeDisplay.getSiteGroupId();\n\n// Blog Posting \n\nexport function getBlog() {\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/sites/' + siteId + '/blog-postings',\n\t  {\n\t\tmethod: 'GET'\n\t  }\n\t).then(res => res.json());\n  }\n\n  export function postBlog(headline, articleBody) {\n\tconst data = {\n\t  \"headline\": headline,\n\t  \"articleBody\": articleBody\n\t};\n\tconst headers = new Headers();\n\theaders.append('Content-Type', 'application/json');\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/sites/' + siteId + '/blog-postings',\n\t  {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders\n\t  }\n\t).then((res) => res.json())\n  }\n\n  export function deleteBlog(idBlog) {\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/blog-postings/' + idBlog, {\n\t  method: 'DELETE',\n\t})\n  }\n  \n  export function updatePost(idBlog, headline,articleBody) {\n\tconst data = {\n\t  \"headline\": headline,\n\t  \"articleBody\": articleBody\n\t}\n\tconst headers = new Headers();\n\theaders.append('Content-Type', 'application/json');\n\treturn Liferay.Util.fetch('/o/headless-delivery/v1.0/blog-postings/' + idBlog, {\n\t  method: 'PATCH',\n\t  headers,\n\t  body: JSON.stringify(data)\n\t})\n\t  .then((res) => res.OK)\n  }"]}
=======
{"version":3,"sources":["../../src/Request/request.js"],"names":["siteId","themeDisplay","method","res","articleBody","headers","body","JSON"],"mappingsqxBA8BS,SAAA,UAAA,CAAA,MAAA,EAA4B;AACpC,ywBAAO,QAAA,IAAA,CAAA,KAAA,CACL,6CADK,MAAA,EACgD;AACrDE,4wBAAQ;AAD6C,mwBADhD,CAAP;;kxBA7BD;;AAEO,ywBAAA,OAAA,GAAmB;AACzB,ywBAAO,QAAA,IAAA,CAAA,KAAA,CACL,qCAAA,MAAA,GADK,gBAAA,EAEL;AACDA,4wBAAQ;AADP,mwBAFK,EAAA,IAAA,CAKA,UAAA,GAAA,EAAG;AAAA,2wBAAIC,IAAJ,IAAIA,EAAJ;AALV,mwBAAO,CAAP;;mxBAQQ,SAAA,QAAA,CAAA,QAAA,EAAA,WAAA,EAAyC;AAKjD,swBAAME,UAAU,IAAhB,OAAgB,EAAhB;AACAA,0wBAAAA,MAAAA,CAAAA,cAAAA,EAAAA,kBAAAA;AACA,ywBAAO,QAAA,IAAA,CAAA,KAAA,CACL,qCAAA,MAAA,GADK,gBAAA,EAEL;AACDH,4wBADC,MAAA;AAEDI,0wBAAMC,KAFL,SAEKA,CAVM;AACX,kxBADW,QAAA;AAEX,qxBAAeH;AAFJ,qwBAUNG,CAFL;AAGDF,6wBAAAA;AAHC,mwBAFK,EAAA,IAAA,CAOA,UAAA,GAAA,EAAA;AAAA,2wBAASF,IAAT,IAASA,EAAT;AAPP,mwBAAO,CAAP;;qxBAiBQ,SAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAkD;AAK1D,swBAAME,UAAU,IAAhB,OAAgB,EAAhB;AACAA,0wBAAAA,MAAAA,CAAAA,cAAAA,EAAAA,kBAAAA;AACA,ywBAAO,QAAA,IAAA,CAAA,KAAA,CAAmB,6CAAnB,MAAA,EAAwE;AAC7EH,4wBAD6E,OAAA;AAE7EG,6wBAF6E,OAAA;AAG7EC,0wBAAMC,KAAAA,SAAAA,CATK;AACX,kxBADW,QAAA;AAEX,qxBAAeH;AAFJ,qwBASLG;AAHuE,mwBAAxE,EAAA,IAAA,CAKC,UAAA,GAAA,EAAA;AAAA,2wBAASJ,IAAT,EAAA;AALR,mwBAAO,CAAP;AAME;;;AAlDH,owBAAMH,SAASC,aAAf,cAAeA,EAAf","sourcesContent":["const siteId = themeDisplay.getSiteGroupId();\n\n// Blog Posting \n\nexport function getBlog() {\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/sites/' + siteId + '/blog-postings',\n\t  {\n\t\tmethod: 'GET'\n\t  }\n\t).then(res => res.json());\n  }\n\n  export function postBlog(headline, articleBody) {\n\tconst data = {\n\t  \"headline\": headline,\n\t  \"articleBody\": articleBody\n\t};\n\tconst headers = new Headers();\n\theaders.append('Content-Type', 'application/json');\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/sites/' + siteId + '/blog-postings',\n\t  {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders\n\t  }\n\t).then((res) => res.json())\n  }\n\n  export function deleteBlog(idBlog) {\n\treturn Liferay.Util.fetch(\n\t  '/o/headless-delivery/v1.0/blog-postings/' + idBlog, {\n\t  method: 'DELETE',\n\t})\n  }\n  \n  export function updatePost(idBlog, headline,articleBody) {\n\tconst data = {\n\t  \"headline\": headline,\n\t  \"articleBody\": articleBody\n\t}\n\tconst headers = new Headers();\n\theaders.append('Content-Type', 'application/json');\n\treturn Liferay.Util.fetch('/o/headless-delivery/v1.0/blog-postings/' + idBlog, {\n\t  method: 'PATCH',\n\t  headers,\n\t  body: JSON.stringify(data)\n\t})\n\t  .then((res) => res.OK)\n  }"]}
>>>>>>> 2d859dd (Clay, React and REST)
